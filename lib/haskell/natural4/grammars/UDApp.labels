--- From the original corpus
#fun nsubj_ head              -- NP -> nsubj
#fun obj_ head                -- NP -> obj
#fun iobj_ head               -- NP -> iobj
#fun xcompA_ head             -- AP -> xcomp
#fun rootV_ head              -- VP -> root
#fun rootA_ head              -- AP -> root
#fun rootN_ head              -- NP -> root
#fun rootQuant_ head          -- Quant -> root
#fun rootDet_ head            -- Det -> root
#fun rootDetA_ det head       -- Det -> AP -> root
#fun cc_ head                 -- Conj -> cc ;
#fun advmod_ head             -- Adv -> advmod
#fun obl_ head                -- Adv -> obl
#fun nmod_ case head          -- Prep -> NP -> nmod ;
#fun nsubjPass_ head          -- NP -> nsubjPass
#fun xcompA_ccomp_ head ccomp -- AP -> ccomp -> xcomp
#fun xcompToBeN_ mark cop head -- mark -> cop -> NP -> xcomp
#fun csubjMark_ mark head
#fun aclRelclUDSRP_ nsubj:* head
#fun punct_ head

#fun addMark mark head
#fun root_nsubj head nsubj:*                         -- root -> nsubj:* -> UDS ;               -- the cat sleeps
#fun root_nsubj_obj head nsubj:* obj                 -- root -> nsubj:* -> obj -> UDS ;   -- the cat sees us
#fun root_nsubj_cop head nsubj:* cop                 -- root -> nsubj:* -> cop -> UDS ; -- the cat is small
#fun root_nsubj_cop_nmod head nsubj:* cop nmod       -- my hovercraft is full [of eels] (eels is nmod)
#fun root_nsubj_cop_advmod head nsubj:* cop advmod   -- the party is [here] (here is advmod)
#fun root_nsubj_cop_aclRelcl head nsubj:* cop acl:relcl
#fun root_nsubj_aux_aclRelcl_obl head nsubj:* aux acl:relcl obl
#fun root_nsubjPass_aux_auxPass head nsubj:pass aux aux:pass  -- everyone should be notified
#fun root_nsubj_aux_obl head nsubj:* aux obl
#fun root_advmod_xcomp head advmod xcomp
#fun root_xcomp head xcomp
#fun root_mark_nsubj_aux head mark nsubj:* aux
#fun root_mark_nsubj_aux_aux head mark nsubj:* aux aux
#fun root_nsubj_aux head nsubj:* aux
#fun root_nsubj_aux_aclRelcl head nsubj:* aux acl:relcl
#fun root_nsubj_aux_aux head nsubj:* aux aux
#fun root_nsubj_cop_aclRelcl_obl head nsubj:* cop acl:relcl obl
#fun root_nsubj_cop_obl head nsubj:* cop obl
#fun root_nmod_nmod head nmod nmod

#fun passRelcl_ head nsubj:pass cop                -- root -> nsubj:pass -> cop -> acl:relcl ;
#fun oblRP_ case head

-- Labels for the core RGL functions, copied from the original gf-rgl/Lang.labels and gf-ud/grammars/Parse.labels

#fun UsePron head
#fun DetCN _ PossPron > nmod:poss head   -- my hovercraft
#fun DetCN det head -- Det -> CN -> NP

#fun DetQuant 	head nummod          -- Quant -> Num -> Det
#fun DetQuantOrd head nummod amod

#fun PossPron head
#fun UseN head
#fun AdjCN amod head

#fun UseV head

#fun UseAdv head

#fun AdvIP head advmod
#fun FunRP case nsubj:* head
#fun ExistS dep dep head
#fun ExistNP head
#fun ExistNPQS dep dep head
#fun GenRP nummod head

-- numerals
#fun pot0 head -- Digit -> Sub10
#fun pot0as1 head -- Sub10 -> Sub100
#fun pot1 head -- Digit -> Sub100
#fun pot1as2 head -- Sub100 -> Sub1000
#fun pot1plus nummod head -- Digit -> Sub10 -> Sub100
#fun pot1to19 head -- Digit -> Sub100
#fun pot2 head -- Sub10 -> Sub1000
#fun pot2as3 head -- Sub1000 -> Sub1000000
#fun pot2plus nummod head -- Sub10 -> Sub100 -> Sub1000
#fun pot3 head -- Sub1000 -> Sub1000000
#fun pot3plus nummod head -- Sub1000 -> Sub1000 -> Sub1000000
#fun pot4plus nummod head -- Sub1000 -> Sub1000000 -> Sub1000000000
#fun pot0 head -- Digit -> Sub10
#fun pot0as1 head -- Sub10 -> Sub100
#fun pot1 head -- Digit -> Sub100
#fun pot1as2 head -- Sub100 -> Sub1000
#fun pot1plus nummod head -- Digit -> Sub10 -> Sub100
#fun pot1to19 head -- Digit -> Sub100
#fun pot2 head -- Sub10 -> Sub1000
#fun pot2as3 head -- Sub1000 -> Sub1000000
#fun pot2plus nummod head -- Sub10 -> Sub100 -> Sub1000
#fun pot3 head -- Sub1000 -> Sub1000000
#fun pot3plus nummod head -- Sub1000 -> Sub1000 -> Sub1000000
#fun pot0 head -- Digit -> Sub10
#fun pot0as1 head -- Sub10 -> Sub100
#fun pot1 head -- Digit -> Sub100
#fun pot1as2 head -- Sub100 -> Sub1000
#fun pot1plus nummod head -- Digit -> Sub10 -> Sub100
#fun pot1to19 head -- Digit -> Sub100
#fun pot2 head -- Sub10 -> Sub1000
#fun pot2as3 head -- Sub1000 -> Sub1000000
#fun pot2plus nummod head -- Sub10 -> Sub100 -> Sub1000
#fun pot3 head -- Sub1000 -> Sub1000000
#fun pot3plus nummod head -- Sub1000 -> Sub1000 -> Sub1000000

#fun AdAP 	advmod head
#fun ConjAP 	cc head
#fun ConjAdV 	cc head
#fun ConjAdv 	cc head
#fun PrepNP 	case head
#fun PrepRP     case head
#fun SubjS 	mark head
#fun AdvCN 	head nmod
#fun ComplN2 	head nmod
#fun ConjCN 	cc head
#fun PossNP 	head nmod
#fun RelCN 	head acl
#fun SentCN 	head acl
#fun SentNP 	head acl
#fun AdNum 	advmod head
#fun AdjDAP 	det head -- TODO: do we need auxfun for `head amod` variant?
#fun ConjDet 	cc head
#fun IIDig 	head goeswith
#fun AdvIAdv 	advmod head
#fun ConjIAdv 	cc head
#fun PrepIP 	case head
#fun IdetQuant head nummod
#fun IdetCN		det head
#fun IdetCN 	det head
#fun CompoundN 	compound head
#fun CompoundCN 	compound head
#fun ComplN3 	nmod head
#fun AdvNP 	head nmod              -- not sure
#fun ConjNP 	cc head
#fun ExtAdvNP 	head nmod      -- not sure
#fun PPartNP		head amod	-- only in core RGL
#fun PredetNP 	det head
#fun RelNP 	head acl:*
#fun RelclNP head acl:relcl
#fun AclNP head acl
#fun OrdNumeralSuperl 	nummod head  -- quite wrong; cannot find relevant details in the documentation; but most probably head lies outside the score of this function
#fun QuestIAdv 	advmod head		-- "where does John sleep" cf. AdvVP
#fun QuestIComp 	head nsubj	-- "where is John": John is clearly nsubj, but is where the head?
#fun QuestQVP 	nsubj head
#fun QuestSlash 	obj head
#fun QuestVP 	nsubj head
#fun AddAdvQVP 	head advmod
#fun AdvQVP 	head obj
#fun ComplSlashIP 	head obj
#fun RelSlash 	mark head
#fun RelVP 	mark head
#fun ConjRS 	cc head
#fun AdvS 	advmod head
#fun ConjS 	cc head
#fun ExtAdvS 	advmod head
#fun TTAnt 	 head dep
#fun AdVVP 	advmod head
#fun QuestIAdv 	advmod head		-- "where does John sleep" cf. AdvVP
#fun AdvVP 	head advmod
#fun PassV head
#fun ComparAdvAdj advmod head obl
#fun ComparAdvAdjS advmod head ccomp -- TODO check
#fun UseRCl dep dep head
#fun UseCl dep dep head
#fun UseQCl dep dep head
-- #fun ComplV head obj
#fun ComplA2 head obl -- not used for now
#fun AdvAP head obl
#fun PassVAgent head obl
-- #fun PastPartAgentAP head obl
#fun GenModNP dep nmod:poss head
#fun EmbedVP head

#cat cop AUX
#cat aux AUX
#cat auxPass AUX
#cat expl PRON
#cat mark PART
#cat Neg PART -- for negation particle "not"
#cat A ADJ primary
#cat ACard ADV
#cat AP ADJ
#cat AdA ADV
#cat AdN ADV
#cat AdV ADV
#cat Adv ADV primary
#cat Ant X
#cat CAdv ADV
#cat CN NOUN
#cat Card NUM
#cat Cl X
#cat ClSlash X
#cat Comp X
#cat Conj CCONJ
#cat Conj CONJ
#cat DAP DET
#cat Det DET primary
#cat Dig NUM
#cat Digit NUM
#cat Digits NUM
#cat Float NUM
#cat IAdv ADV
#cat IComp X
#cat IDet DET
#cat IP PRON
#cat IQuant DET
#cat Imp VERB
#cat Int NUM
#cat Interj INTJ
#cat N NOUN primary
#cat NP PRON ----
#cat Num NUM
#cat Numeral NUM
#cat Ord NUM
#cat PConj CCONJ
#cat PConj CONJ
#cat PN PROPN primary
#cat Phr X
#cat Pol X
#cat Predet DET
#cat Prep ADP primary
#cat Pron PRON primary
#cat QCl X
#cat QS X
#cat QVP X
#cat Quant DET
#cat RCl X
#cat RP PRON
#cat RS X
#cat S X
#cat SC X
#cat SSlash X
#cat Sub10 NUM
#cat Sub100 NUM
#cat Sub1000 NUM
#cat Sub1000000 NUM
#cat Sub1000000000 NUM
#cat Subj SCONJ
#cat Symb X
#cat Temp X
#cat Tense X
#cat Text X
#cat Utt X
#cat V VERB primary
#cat VP X
#cat VPSlash X


--- From the corpus of fragments
#fun root_only head
#fun root_acl head acl
#fun root_acl_nmod head acl nmod
#fun root_advcl head advcl
#fun root_advmod head advmod
#fun root_advmod_advcl head advmod advcl
#fun root_advmod_advmod_obl head advmod advmod obl
#fun root_advmod_amod head advmod amod
#fun root_advmod_nsubj_aux_advmod_obj head advmod nsubj:* aux advmod obj
#fun root_advmod_nsubj_cop_obl head advmod nsubj:* cop obl
#fun root_amod head amod
#fun root_amod_nmod head amod nmod
#fun root_appos head appos
#fun root_appos_advmod head appos advmod
#fun root_auxPass head aux:pass
#fun root_case head case
#fun root_case_amod head case amod
#fun root_case_amod_amod head case amod amod
#fun root_case_compound head case compound
#fun root_case_det head case det
#fun root_case_det_amod head case det amod
#fun root_case_det_nmod head case det nmod
#fun root_case_nummod head case nummod
#fun root_case_nummod_acl head case nummod acl
#fun root_case_nummod_nummod head case nummod nummod
#fun root_cc_aux_cop_det_nmod head cc aux cop det nmod


#fun root_cc_cop_xcomp head cc cop xcomp
#fun root_cc_det_nmod head cc det nmod
#fun root_cc_nmod head cc nmod
#fun root_cc_obj head cc obj
#fun root_ccomp head ccomp
#fun root_compound head compound
#fun root_compoundPrt_compoundPrt head compound:prt compound:prt
#fun root_compound_acl head compound acl
#fun root_compound_amod head compound amod
#fun root_compound_appos head compound appos
#fun root_compound_compound head compound compound
#fun root_compound_compound_appos head compound compound appos
#fun root_compound_flat head compound flat
#fun root_cop head cop
#fun root_cop_det_compound_amod head cop det compound amod
#fun root_cop_det_nmod head cop det nmod
#fun root_cop_advmod head cop advmod
#fun root_csubj head csubj
#fun root_csubj_aux_aux head csubj aux aux
#fun root_aclRelcl head acl:relcl
#fun root_aclRelcl_nmod head acl:relcl nmod
#fun root_det_amod head det amod
#fun root_det_amod_aclRelcl head det amod acl:relcl
#fun root_det_amod_aclRelcl_nmod head det amod acl:relcl nmod
#fun root_det_amod_amod_acl_nmod head det amod amod acl nmod
#fun root_det_amod_nmod head det amod nmod
#fun root_det_amod_obl head det amod obl
#fun root_det_case head det case
#fun root_det_compound head det compound
#fun root_det_compound_compound head det compound compound
#fun root_det_compound_compound_nmod_appos head det compound compound nmod appos
#fun root_det_nmod head det nmod
#fun root_det_nmodPoss head det nmod:poss
#fun root_det_nmodPoss_compound head det nmod:poss compound
#fun root_discourse head discourse
#fun root_fixed head fixed
#fun root_goeswith head goeswith
#fun root_goeswith_det_amod_nmod head goeswith det amod nmod
#fun root_goeswith_goeswith head goeswith goeswith
#fun root_mark head mark
#fun root_mark_case_det_nmod head mark case det nmod
#fun root_mark_cc_mark_obj head mark cc mark obj
#fun root_mark_det_obj head mark det obj
#fun root_mark_expl_cop_xcomp head mark expl cop xcomp
#fun root_mark_expl_nsubj head mark expl nsubj
#fun root_expl_cop_csubj head expl cop csubj
#fun root_mark_nsubj head mark nsubj
#fun root_mark_nsubj head mark nsubj:pass
#fun root_mark_nsubj_obl head mark nsubj:pass obl
#fun root_mark_nsubj_aux_advmod_obj head mark nsubj:* aux advmod obj
#fun root_mark_nsubj_cop head mark nsubj:* cop
#fun root_mark_nsubj_cop_case_det head mark nsubj:* cop case det
#fun root_mark_nsubj_cop_det_case head mark nsubj:* cop det case
#fun root_mark_nsubj_cop_det_compound_compound head mark nsubj:* cop det compound compound
#fun root_mark_nsubj_cop_obl head mark nsubj:* cop obl
#fun root_mark_nsubj_obj head mark nsubj:* obj
#fun root_mark_nsubj_obl head mark nsubj:* obl
#fun root_mark_nsubj_xcomp head mark nsubj:* xcomp
#fun root_mark_nummod head mark nummod
#fun root_nmod head nmod
#fun root_nmodPoss_advmod head nmod:poss advmod
#fun root_nmodPoss_nmodPoss head nmod:poss nmod:poss
#fun root_nmod_acl head nmod acl

{-
#fun root_nsubjPass_auxPass head nsubj:pass aux:pass
#fun root_nsubjPass_auxPass_advmod head nsubj:pass aux:pass advmod
#fun root_nsubjPass_auxPass_advmod_advcl head nsubj:pass aux:pass advmod advcl
#fun root_nsubjPass_auxPass_advmod_xcomp head nsubj:pass aux:pass advmod xcomp
#fun root_nsubjPass_auxPass_xcomp head nsubj:pass aux:pass xcomp
#fun root_nsubjPass_aux_auxPass head nsubj:pass aux aux:pass
#fun root_nsubjPass_aux_auxPass_obl head nsubj:pass aux aux:pass obl
#fun root_nsubjPass_aux_auxPass_obl_advmod head nsubj:pass aux aux:pass obl advmod
#fun root_nsubjPass_aux_auxPass_obl_obl_advcl head nsubj:pass aux aux:pass obl obl advcl
#fun root_nsubjPass_aux_auxPass_obl_obl_advmod head nsubj:pass aux aux:pass obl obl advmod
-}
#fun root_nsubj_advmod head nsubj:* advmod
#fun root_nsubj_advmod_case_det head nsubj:* advmod case det
#fun root_nsubj_advmod_obj head nsubj:* advmod obj
#fun root_nsubj_aux_advmod head nsubj:* aux advmod
#fun root_nsubj_aux_advmod_obj_advcl head nsubj:* aux advmod obj advcl
#fun root_nsubj_aux_obj head nsubj:* aux obj
#fun root_nsubj_aux_obj_obl head nsubj:* aux obj obl
#fun root_nsubj_aux_obj_obl_advmod_advcl head nsubj:* aux obj obl advmod advcl
#fun root_nsubj_aux_obj_obl_obl head nsubj:* aux obj obl obl
#fun root_nsubj_ccomp head nsubj:* ccomp
#fun root_nsubj_cop head nsubj:* cop
#fun root_nsubj_cop_aclRelcl head nsubj:* cop acl:relcl
#fun root_nsubj_cop_advcl head nsubj:* cop advcl
#fun root_nsubj_cop_case_nmod_acl head nsubj:* cop case nmod acl
#fun root_nsubj_cop_det_amod_advcl head nsubj:* cop det amod advcl
#fun root_nsubj_cop_det_amod_compound head nsubj:* cop det amod compound
#fun root_nsubj_cop_det_compound head nsubj:* cop det compound
#fun root_nsubj_cop_det_nmod head nsubj:* cop det nmod
#fun root_nsubj_cop_nmodPoss head nsubj:* cop nmod:poss
#fun root_nsubj_det head nsubj:* det
#fun root_nsubj_det_nmod_nmod head nsubj:* det nmod nmod
#fun root_nsubj_obj head nsubj:* obj
#fun root_nsubj_obj_obl head nsubj:* obj obl
#fun root_nsubj_obj_xcomp head nsubj:* obj xcomp
#fun root_nsubj_obl head nsubj:* obl
#fun root_nsubj_xcomp head nsubj:* xcomp
#fun root_nummod head nummod
#fun root_nummod_appos head nummod appos
#fun root_nummod_auxPass_cc_aux_auxPass_obl_obl head nummod aux:pass cc aux aux:pass obl obl
#fun root_nummod_cop_cc_aux_cop_det_nmod head nummod cop cc aux cop det nmod
#fun root_nummod_det_acl head nummod det acl
#fun root_nummod_det_aclRelcl head nummod det acl:relcl
#fun root_nummod_det_amod head nummod det amod
#fun root_nummod_det_nmod head nummod det nmod
#fun root_nummod_mark_obj head nummod mark obj
#fun root_nummod_mark_obj_cc head nummod mark obj cc
#fun root_nummod_nmod head nummod nmod
#fun root_nummod_obl head nummod obl
#fun root_nummod_obl_cc head nummod obl cc
#fun root_obj head obj
#fun root_obj_ccomp head obj ccomp
#fun root_obj_nmod head obj nmod
#fun root_obj_obl_advcl head obj obl advcl
#fun root_obl head obl
#fun root_obl_appos head obl appos
#fun root_obl_aux head obl aux
#fun root_obl_case head obl case
#fun root_obj_obl head obj obl
-- #fun root_obl_obj head obl obj -- commented out because ud2gf chooses this in favour of the more common root_obj_obl
#fun root_obl_obl head obl obl
#fun root_obl_obl_obl_cc head obl obl obl
#fun root_obl_xcomp head obl xcomp
#fun root_parataxis head parataxis
#fun root_xcomp_ccomp head xcomp ccomp
#fun root_obj_xcomp head obj xcomp
#fun root_advcl_det_compound_amod_advcl head advcl  det  compound  amod  advcl
#fun root_advcl_nsubjPass_auxPass head advcl  nsubj:pass  aux:pass
#fun root_advcl_nsubj_aux_advcl head advcl  nsubj:*  aux  advcl
#fun root_advcl_nsubj_aux_advmod_obj head advcl  nsubj:*  aux  advmod  obj
#fun root_advcl_nsubj_aux_ccomp head advcl  nsubj:*  aux  ccomp
#fun root_advcl_nsubj_aux_obl_obj head advcl  nsubj:*  aux  obl  obj
#fun root_advcl_nsubj_cop head advcl  nsubj:*  cop
#fun root_advcl_nsubj_cop_case_amod_nmod head advcl  nsubj:*  cop  case  amod  nmod
#fun root_advcl_nsubj_cop_det_amod head advcl  nsubj:*  cop  det  amod
#fun root_advcl_nsubj_xcomp head advcl  nsubj:*  xcomp
#fun root_mark_nsubj_nsubj_xcomp head mark  nsubj:*  nsubj:*  xcomp
#fun root_nsubj_cop_det_aclRelcl head nsubj:*  cop  det  acl:relcl
#fun root_nsubj_cop_obl_parataxis head nsubj:*  cop  obl  parataxis
#fun root_nsubj_obj_advcl head nsubj:*  obj  advcl
#fun root_nsubj_aux_xcomp head nsubj:* aux xcomp
#fun advclMarkUDS_ mark head
#fun ccompMarkUDS_ mark head

-- Maryam's annotations
#fun root_advcl_nsubjPass_aux_auxPass_xcomp head advcl nsubj:pass aux aux:pass xcomp
#fun root_nmod_aclRelcl head nmod acl:relcl
#fun root_nsubjPass_aux_auxPass_advcl_advcl head nsubj:pass aux aux:pass advcl advcl
#fun root_nsubjPass_aux_auxPass_advmod head nsubj:pass aux aux:pass advmod
#fun root_nsubjPass_aux_auxPass_obl head nsubj:pass aux aux:pass obl
#fun root_nsubjPass_aux_auxPass_xcomp head nsubj:pass aux aux:pass xcomp
#fun root_nsubj_aux_cop_nmod head nsubj:* aux cop nmod
#fun root_nsubj_nsubj_aux_advmod_obj head nsubj:* nsubj aux advmod obj
#fun root_advcl_nsubj_cop_nsubj head advcl nsubj:* cop nsubj

#fun MkA2 head case
#fun Adv_Adv__but_in_any_case_Adv head TODO
#fun Adv_at_the_time_NP_notifies_NP head dummy
#fun Adv_no_later_than_Num_calendar_days_after_the_day_S dummy head
#fun CN_CN_relating_to_NP head obl
#fun CN_obligation_of_NP_to_VP dummy head
#fun NP_all_the_CN_RS head acl:relcl
#fun NP_the_loss_of_any_CN_RS head acl:relcl
-- #fun NP_the_unauthorised_ConjN2_of_NP
-- #fun NP_the_unauthorised_N2_of_NP
-- #fun RS_that_NP_VP
-- #fun RS_to_whom_NP_VP
-- #fun VP_assesses__Adv__that_S
-- #fun VP_may__SeqAdv__VP
-- #fun VP_must__SeqAdv__VP
-- #fun VP_notify_NP_of_NP