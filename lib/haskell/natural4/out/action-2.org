* preface
:PROPERTIES:
:VISIBILITY: folded
:END:

natural4> test (suite: natural4-test, args: --match "/Parser tests/parser elements and fragments ... should parse/action-2/")

* Tokens
DO
    ( "win" ( "gloriously" ) )
* main
:PROPERTIES:
:VISIBILITY: children
:END:

** / pDoAction/Do                                                                                                      :1_1:Do:
pDoAction/Do> IN: DO ( "win" ( "gloriously" ) )
pDoAction/Do> MATCH (COK): DO
pDoAction/Do> VALUE: (Do,[])

** \ pDoAction/Do has returned Do                                                                                       :1_2:GoDeeper:
** / pDoAction/pAction                                                                                                  :1_2:GoDeeper:
*** / pAction calling pParamText                                                                                       :1_2:GoDeeper:
**** / pParamText                                                                                                     :1_2:GoDeeper:
***** / pParamText(flat) first line: pKeyValues                                                                      :1_2:GoDeeper:
****** / pKeyValuesAka                                                                                              :1_2:GoDeeper:
******* / slAKA                                                                                                    :1_2:GoDeeper:
******** / $*|                                                                                                    :1_2:GoDeeper:
********* / slAKA base                                                                                           :1_2:GoDeeper:
********** / slKeyValues                                                                                        :1_2:GoDeeper:
*********** / $*|                                                                                              :1_2:GoDeeper:
************ / someSL                                                                                         :1_2:GoDeeper:
************* / pNumAsText                                                                                   :1_2:GoDeeper:
pNumAsText> IN: ( "win" ( "gloriously" ) )
pNumAsText> MATCH (EERR): <EMPTY>
pNumAsText> ERROR:
pNumAsText> offset=1:
pNumAsText> unexpected (
pNumAsText> expecting number

************* \ !Unconsumed Error: pNumAsText: Unexpected ( Expecting: number                                :1_2:GoDeeper:
someSL> IN: ( "win" ( "gloriously" ) )
someSL> MATCH (EERR): <EMPTY>
someSL> ERROR:
someSL> offset=1:
someSL> unexpected (
someSL> expecting other text or number

************ \ !Unconsumed Error: someSL: Unexpected ( Expecting: other text or number                        :1_2:GoDeeper:
$*|> IN: ( "win" ( "gloriously" ) )
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=1:
$*|> unexpected (
$*|> expecting other text or number

*********** \ !Unconsumed Error: $*|: Unexpected ( Expecting: other text or number                             :1_2:GoDeeper:
slKeyValues> IN: ( "win" ( "gloriously" ) )
slKeyValues> MATCH (EERR): <EMPTY>
slKeyValues> ERROR:
slKeyValues> offset=1:
slKeyValues> unexpected (
slKeyValues> expecting other text or number

********** \ !Unconsumed Error: slKeyValues: Unexpected ( Expecting: other text or number                       :1_2:GoDeeper:
slAKA base> IN: ( "win" ( "gloriously" ) )
slAKA base> MATCH (EERR): <EMPTY>
slAKA base> ERROR:
slAKA base> offset=1:
slAKA base> unexpected (
slAKA base> expecting other text or number

********* \ !Unconsumed Error: slAKA base: Unexpected ( Expecting: other text or number                          :1_2:GoDeeper:
$*|> IN: ( "win" ( "gloriously" ) )
$*|> MATCH (EERR): <EMPTY>
$*|> ERROR:
$*|> offset=1:
$*|> unexpected (
$*|> expecting other text or number

******** \ !Unconsumed Error: $*|: Unexpected ( Expecting: other text or number                                   :1_2:GoDeeper:
slAKA> IN: ( "win" ( "gloriously" ) )
slAKA> MATCH (EERR): <EMPTY>
slAKA> ERROR:
slAKA> offset=1:
slAKA> unexpected (
slAKA> expecting other text or number

******* \ !Unconsumed Error: slAKA: Unexpected ( Expecting: other text or number                                   :1_2:GoDeeper:
pKeyValuesAka> IN: ( "win" ( "gloriously" ) )
pKeyValuesAka> MATCH (EERR): <EMPTY>
pKeyValuesAka> ERROR:
pKeyValuesAka> offset=1:
pKeyValuesAka> unexpected (
pKeyValuesAka> expecting other text or number

****** \ !Unconsumed Error: pKeyValuesAka: Unexpected ( Expecting: other text or number                             :1_2:GoDeeper:
pParamText(flat) first line: pKeyValues> IN: ( "win" ( "gloriously" ) )
pParamText(flat) first line: pKeyValues> MATCH (EERR): <EMPTY>
pParamText(flat) first line: pKeyValues> ERROR:
pParamText(flat) first line: pKeyValues> offset=1:
pParamText(flat) first line: pKeyValues> unexpected (
pParamText(flat) first line: pKeyValues> expecting other text or number

***** \ !Unconsumed Error: pParamText(flat) first line: pKeyValues: Unexpected ( Expecting: other text or number     :1_2:GoDeeper:
pParamText> IN: ( "win" ( "gloriously" ) )
pParamText> MATCH (EERR): <EMPTY>
pParamText> ERROR:
pParamText> offset=1:
pParamText> unexpected (
pParamText> expecting other text or number

**** \ !Unconsumed Error: pParamText: Unexpected ( Expecting: other text or number                                    :1_2:GoDeeper:
pAction calling pParamText> IN: ( "win" ( "gloriously" ) )
pAction calling pParamText> MATCH (EERR): <EMPTY>
pAction calling pParamText> ERROR:
pAction calling pParamText> offset=1:
pAction calling pParamText> unexpected (
pAction calling pParamText> expecting other text or number

*** \ !Unconsumed Error: pAction calling pParamText: Unexpected ( Expecting: other text or number                      :1_2:GoDeeper:
pDoAction/pAction> IN: ( "win" ( "gloriously" ) )
pDoAction/pAction> MATCH (EERR): <EMPTY>
pDoAction/pAction> ERROR:
pDoAction/pAction> offset=1:
pDoAction/pAction> unexpected (
pDoAction/pAction> expecting other text or number

** \ !Unconsumed Error: pDoAction/pAction: Unexpected ( Expecting: other text or number                                 :1_2:GoDeeper:
Loading env

Parser tests
  parser elements and fragments ... should parse
    action-2 FAILED [1]

Failures:

  test/Spec.hs:791:7: 
  1) Parser tests, parser elements and fragments ... should parse, action-2
       expected: [(Leaf (("win" :| ["gloriously"],Nothing) :| []),[])]
       but parsing failed with error:
       1:2:
       unexpected (
       expecting other text or number
       
       ->   ✳ win   gloriously
       
       
       Stream:
       DO "✳"
           ( "✳" "win"
               ( "gloriously" "✳" )
           )

  To rerun use: --match "/Parser tests/parser elements and fragments ... should parse/action-2/"

Randomized with seed 1309720024

Finished in 0.0032 seconds
1 example, 1 failure

natural4> Test suite natural4-test failed
Test suite failure for package natural4-0.1.0.0
    natural4-test:  exited with: ExitFailure 1
Logs printed to console

