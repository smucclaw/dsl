-- File auto generated by purescript-bridge! --
module AnyAll.Types where

import Data.Generic.Rep (class Generic)
import Data.Maybe (Maybe, Maybe(..))
import Data.Newtype (class Newtype)
import Prim (Array)

import Prelude

data Item' a b =
    Leaf b
  | All {
      itemLbl :: Maybe a
    , itemsAll :: Array (Item' a b)
    }
  | Any {
      itemLbl :: Maybe a
    , itemsAny :: Array (Item' a b)
    }
  | Not (Item' a b)

derive instance genericItem' :: (Generic a ra, Generic b rb) => Generic (Item' a b) _

