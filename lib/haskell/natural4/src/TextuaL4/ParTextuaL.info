-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from TextuaL4/ParTextuaL.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pRule -> Rule                               (0)
	Double -> L_doubl                                  (1)
	Integer -> L_integ                                 (2)
	Text -> L_Text                                     (3)
	Rule -> 'EVERY' BoolStruct Deontic BoolStruct      (4)
	Rule -> 'EVERY' BoolStruct Who Deontic BoolStruct   (5)
	Rule -> 'EVERY' BoolStruct Who InlineHornlike Deontic BoolStruct   (6)
	Rule -> Text 'MEANS' BoolStruct                    (7)
	Deontic -> 'MUST'                                  (8)
	Deontic -> 'MAY'                                   (9)
	Deontic -> 'SHANT'                                 (10)
	Who -> 'WHO' BoolStruct                            (11)
	InlineHornlike -> 'MEANS' BoolStruct               (12)
	RelationalPredicate -> ListMTExpr                  (13)
	RelationalPredicate -> ListMTExpr RPRel BoolStruct   (14)
	MTExpr -> Text                                     (15)
	MTExpr -> Integer                                  (16)
	MTExpr -> Double                                   (17)
	MTExpr -> Bool                                     (18)
	Bool -> 'True'                                     (19)
	Bool -> 'False'                                    (20)
	ListMTExpr -> MTExpr                               (21)
	ListMTExpr -> MTExpr ListMTExpr                    (22)
	BoolStruct -> 'ANY' '(' ListBoolStruct ')'         (23)
	BoolStruct -> Text 'ANY' '(' ListBoolStruct ')' Text   (24)
	BoolStruct -> Text 'ANY' '(' ListBoolStruct ')'    (25)
	BoolStruct -> 'ALL' '(' ListBoolStruct ')'         (26)
	BoolStruct -> Text 'ALL' '(' ListBoolStruct ')'    (27)
	BoolStruct -> Text 'ALL' '(' ListBoolStruct ')' Text   (28)
	BoolStruct -> 'NOT' BoolStruct                     (29)
	BoolStruct -> RelationalPredicate                  (30)
	ListBoolStruct -> BoolStruct                       (31)
	ListBoolStruct -> BoolStruct ',' ListBoolStruct    (32)
	RPRel -> 'IS'                                      (33)
	RPRel -> 'HAS'                                     (34)
	RPRel -> 'EQUALS'                                  (35)
	RPRel -> '<'                                       (36)
	RPRel -> '<='                                      (37)
	RPRel -> '>'                                       (38)
	RPRel -> '>='                                      (39)
	RPRel -> 'IN'                                      (40)
	RPRel -> 'NOT' 'IN'                                (41)
	RPRel -> 'NOT'                                     (42)
	RPRel -> 'AND'                                     (43)
	RPRel -> 'OR'                                      (44)
	RPRel -> 'SUM'                                     (45)
	RPRel -> 'PRODUCT'                                 (46)
	RPRel -> 'MINUS'                                   (47)
	RPRel -> 'DIVIDE'                                  (48)
	RPRel -> 'MODULO'                                  (49)
	RPRel -> 'SUBJECT' 'TO'                            (50)
	RPRel -> 'MIN'                                     (51)
	RPRel -> 'MAX'                                     (52)
	RPRel -> 'MAP'                                     (53)
	RPRel -> TComparison                               (54)
	TComparison -> 'BEFORE'                            (55)
	TComparison -> 'AFTER'                             (56)
	TComparison -> 'BY'                                (57)
	TComparison -> 'ON'                                (58)
	TComparison -> 'ABOUT'                             (59)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'('            { PT _ (TS _ 1) }
	')'            { PT _ (TS _ 2) }
	','            { PT _ (TS _ 3) }
	'<'            { PT _ (TS _ 4) }
	'<='           { PT _ (TS _ 5) }
	'>'            { PT _ (TS _ 6) }
	'>='           { PT _ (TS _ 7) }
	'ABOUT'        { PT _ (TS _ 8) }
	'AFTER'        { PT _ (TS _ 9) }
	'ALL'          { PT _ (TS _ 10) }
	'AND'          { PT _ (TS _ 11) }
	'ANY'          { PT _ (TS _ 12) }
	'BEFORE'       { PT _ (TS _ 13) }
	'BY'           { PT _ (TS _ 14) }
	'DIVIDE'       { PT _ (TS _ 15) }
	'EQUALS'       { PT _ (TS _ 16) }
	'EVERY'        { PT _ (TS _ 17) }
	'False'        { PT _ (TS _ 18) }
	'HAS'          { PT _ (TS _ 19) }
	'IN'           { PT _ (TS _ 20) }
	'IS'           { PT _ (TS _ 21) }
	'MAP'          { PT _ (TS _ 22) }
	'MAX'          { PT _ (TS _ 23) }
	'MAY'          { PT _ (TS _ 24) }
	'MEANS'        { PT _ (TS _ 25) }
	'MIN'          { PT _ (TS _ 26) }
	'MINUS'        { PT _ (TS _ 27) }
	'MODULO'       { PT _ (TS _ 28) }
	'MUST'         { PT _ (TS _ 29) }
	'NOT'          { PT _ (TS _ 30) }
	'ON'           { PT _ (TS _ 31) }
	'OR'           { PT _ (TS _ 32) }
	'PRODUCT'      { PT _ (TS _ 33) }
	'SHANT'        { PT _ (TS _ 34) }
	'SUBJECT'      { PT _ (TS _ 35) }
	'SUM'          { PT _ (TS _ 36) }
	'TO'           { PT _ (TS _ 37) }
	'True'         { PT _ (TS _ 38) }
	'WHO'          { PT _ (TS _ 39) }
	L_doubl        { PT _ (TD $$) }
	L_integ        { PT _ (TI $$) }
	L_Text         { PT _ (T_Text $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pRule    rule  0
	Double          rule  1
	Integer         rule  2
	Text            rule  3
	Rule            rules 4, 5, 6, 7
	Deontic         rules 8, 9, 10
	Who             rule  11
	InlineHornlike  rule  12
	RelationalPredicate rules 13, 14
	MTExpr          rules 15, 16, 17, 18
	Bool            rules 19, 20
	ListMTExpr      rules 21, 22
	BoolStruct      rules 23, 24, 25, 26, 27, 28, 29, 30
	ListBoolStruct  rules 31, 32
	RPRel           rules 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54
	TComparison     rules 55, 56, 57, 58, 59

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pRule -> . Rule                              (rule 0)

	'EVERY'        shift, and enter state 5
	L_Text         shift, and enter state 6

	Text           goto state 3
	Rule           goto state 4

State 1

	Double -> . L_doubl                                 (rule 1)

	L_doubl        shift, and enter state 2


State 2

	Double -> L_doubl .                                 (rule 1)

	')'            reduce using rule 1
	','            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'ABOUT'        reduce using rule 1
	'AFTER'        reduce using rule 1
	'AND'          reduce using rule 1
	'BEFORE'       reduce using rule 1
	'BY'           reduce using rule 1
	'DIVIDE'       reduce using rule 1
	'EQUALS'       reduce using rule 1
	'False'        reduce using rule 1
	'HAS'          reduce using rule 1
	'IN'           reduce using rule 1
	'IS'           reduce using rule 1
	'MAP'          reduce using rule 1
	'MAX'          reduce using rule 1
	'MAY'          reduce using rule 1
	'MEANS'        reduce using rule 1
	'MIN'          reduce using rule 1
	'MINUS'        reduce using rule 1
	'MODULO'       reduce using rule 1
	'MUST'         reduce using rule 1
	'NOT'          reduce using rule 1
	'ON'           reduce using rule 1
	'OR'           reduce using rule 1
	'PRODUCT'      reduce using rule 1
	'SHANT'        reduce using rule 1
	'SUBJECT'      reduce using rule 1
	'SUM'          reduce using rule 1
	'True'         reduce using rule 1
	'WHO'          reduce using rule 1
	L_doubl        reduce using rule 1
	L_integ        reduce using rule 1
	L_Text         reduce using rule 1
	%eof           reduce using rule 1


State 3

	Rule -> Text . 'MEANS' BoolStruct                   (rule 7)

	'MEANS'        shift, and enter state 21


State 4

	%start_pRule -> Rule .                              (rule 0)

	%eof           accept


State 5

	Rule -> 'EVERY' . BoolStruct Deontic BoolStruct     (rule 4)
	Rule -> 'EVERY' . BoolStruct Who Deontic BoolStruct    (rule 5)
	Rule -> 'EVERY' . BoolStruct Who InlineHornlike Deontic BoolStruct    (rule 6)

	'ALL'          shift, and enter state 15
	'ANY'          shift, and enter state 16
	'False'        shift, and enter state 17
	'NOT'          shift, and enter state 18
	'True'         shift, and enter state 19
	L_doubl        shift, and enter state 2
	L_integ        shift, and enter state 20
	L_Text         shift, and enter state 6

	Double         goto state 7
	Integer        goto state 8
	Text           goto state 9
	RelationalPredicategoto state 10
	MTExpr         goto state 11
	Bool           goto state 12
	ListMTExpr     goto state 13
	BoolStruct     goto state 14

State 6

	Text -> L_Text .                                    (rule 3)

	')'            reduce using rule 3
	','            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'ABOUT'        reduce using rule 3
	'AFTER'        reduce using rule 3
	'ALL'          reduce using rule 3
	'AND'          reduce using rule 3
	'ANY'          reduce using rule 3
	'BEFORE'       reduce using rule 3
	'BY'           reduce using rule 3
	'DIVIDE'       reduce using rule 3
	'EQUALS'       reduce using rule 3
	'False'        reduce using rule 3
	'HAS'          reduce using rule 3
	'IN'           reduce using rule 3
	'IS'           reduce using rule 3
	'MAP'          reduce using rule 3
	'MAX'          reduce using rule 3
	'MAY'          reduce using rule 3
	'MEANS'        reduce using rule 3
	'MIN'          reduce using rule 3
	'MINUS'        reduce using rule 3
	'MODULO'       reduce using rule 3
	'MUST'         reduce using rule 3
	'NOT'          reduce using rule 3
	'ON'           reduce using rule 3
	'OR'           reduce using rule 3
	'PRODUCT'      reduce using rule 3
	'SHANT'        reduce using rule 3
	'SUBJECT'      reduce using rule 3
	'SUM'          reduce using rule 3
	'True'         reduce using rule 3
	'WHO'          reduce using rule 3
	L_doubl        reduce using rule 3
	L_integ        reduce using rule 3
	L_Text         reduce using rule 3
	%eof           reduce using rule 3


State 7

	MTExpr -> Double .                                  (rule 17)

	')'            reduce using rule 17
	','            reduce using rule 17
	'<'            reduce using rule 17
	'<='           reduce using rule 17
	'>'            reduce using rule 17
	'>='           reduce using rule 17
	'ABOUT'        reduce using rule 17
	'AFTER'        reduce using rule 17
	'AND'          reduce using rule 17
	'BEFORE'       reduce using rule 17
	'BY'           reduce using rule 17
	'DIVIDE'       reduce using rule 17
	'EQUALS'       reduce using rule 17
	'False'        reduce using rule 17
	'HAS'          reduce using rule 17
	'IN'           reduce using rule 17
	'IS'           reduce using rule 17
	'MAP'          reduce using rule 17
	'MAX'          reduce using rule 17
	'MAY'          reduce using rule 17
	'MEANS'        reduce using rule 17
	'MIN'          reduce using rule 17
	'MINUS'        reduce using rule 17
	'MODULO'       reduce using rule 17
	'MUST'         reduce using rule 17
	'NOT'          reduce using rule 17
	'ON'           reduce using rule 17
	'OR'           reduce using rule 17
	'PRODUCT'      reduce using rule 17
	'SHANT'        reduce using rule 17
	'SUBJECT'      reduce using rule 17
	'SUM'          reduce using rule 17
	'True'         reduce using rule 17
	'WHO'          reduce using rule 17
	L_doubl        reduce using rule 17
	L_integ        reduce using rule 17
	L_Text         reduce using rule 17
	%eof           reduce using rule 17


State 8

	MTExpr -> Integer .                                 (rule 16)

	')'            reduce using rule 16
	','            reduce using rule 16
	'<'            reduce using rule 16
	'<='           reduce using rule 16
	'>'            reduce using rule 16
	'>='           reduce using rule 16
	'ABOUT'        reduce using rule 16
	'AFTER'        reduce using rule 16
	'AND'          reduce using rule 16
	'BEFORE'       reduce using rule 16
	'BY'           reduce using rule 16
	'DIVIDE'       reduce using rule 16
	'EQUALS'       reduce using rule 16
	'False'        reduce using rule 16
	'HAS'          reduce using rule 16
	'IN'           reduce using rule 16
	'IS'           reduce using rule 16
	'MAP'          reduce using rule 16
	'MAX'          reduce using rule 16
	'MAY'          reduce using rule 16
	'MEANS'        reduce using rule 16
	'MIN'          reduce using rule 16
	'MINUS'        reduce using rule 16
	'MODULO'       reduce using rule 16
	'MUST'         reduce using rule 16
	'NOT'          reduce using rule 16
	'ON'           reduce using rule 16
	'OR'           reduce using rule 16
	'PRODUCT'      reduce using rule 16
	'SHANT'        reduce using rule 16
	'SUBJECT'      reduce using rule 16
	'SUM'          reduce using rule 16
	'True'         reduce using rule 16
	'WHO'          reduce using rule 16
	L_doubl        reduce using rule 16
	L_integ        reduce using rule 16
	L_Text         reduce using rule 16
	%eof           reduce using rule 16


State 9

	MTExpr -> Text .                                    (rule 15)
	BoolStruct -> Text . 'ANY' '(' ListBoolStruct ')' Text    (rule 24)
	BoolStruct -> Text . 'ANY' '(' ListBoolStruct ')'    (rule 25)
	BoolStruct -> Text . 'ALL' '(' ListBoolStruct ')'    (rule 27)
	BoolStruct -> Text . 'ALL' '(' ListBoolStruct ')' Text    (rule 28)

	')'            reduce using rule 15
	','            reduce using rule 15
	'<'            reduce using rule 15
	'<='           reduce using rule 15
	'>'            reduce using rule 15
	'>='           reduce using rule 15
	'ABOUT'        reduce using rule 15
	'AFTER'        reduce using rule 15
	'ALL'          shift, and enter state 61
	'AND'          reduce using rule 15
	'ANY'          shift, and enter state 62
	'BEFORE'       reduce using rule 15
	'BY'           reduce using rule 15
	'DIVIDE'       reduce using rule 15
	'EQUALS'       reduce using rule 15
	'False'        reduce using rule 15
	'HAS'          reduce using rule 15
	'IN'           reduce using rule 15
	'IS'           reduce using rule 15
	'MAP'          reduce using rule 15
	'MAX'          reduce using rule 15
	'MAY'          reduce using rule 15
	'MEANS'        reduce using rule 15
	'MIN'          reduce using rule 15
	'MINUS'        reduce using rule 15
	'MODULO'       reduce using rule 15
	'MUST'         reduce using rule 15
	'NOT'          reduce using rule 15
	'ON'           reduce using rule 15
	'OR'           reduce using rule 15
	'PRODUCT'      reduce using rule 15
	'SHANT'        reduce using rule 15
	'SUBJECT'      reduce using rule 15
	'SUM'          reduce using rule 15
	'True'         reduce using rule 15
	'WHO'          reduce using rule 15
	L_doubl        reduce using rule 15
	L_integ        reduce using rule 15
	L_Text         reduce using rule 15
	%eof           reduce using rule 15


State 10

	BoolStruct -> RelationalPredicate .                 (rule 30)

	')'            reduce using rule 30
	','            reduce using rule 30
	'MAY'          reduce using rule 30
	'MEANS'        reduce using rule 30
	'MUST'         reduce using rule 30
	'SHANT'        reduce using rule 30
	'WHO'          reduce using rule 30
	%eof           reduce using rule 30


State 11

	ListMTExpr -> MTExpr .                              (rule 21)
	ListMTExpr -> MTExpr . ListMTExpr                   (rule 22)

	')'            reduce using rule 21
	','            reduce using rule 21
	'<'            reduce using rule 21
	'<='           reduce using rule 21
	'>'            reduce using rule 21
	'>='           reduce using rule 21
	'ABOUT'        reduce using rule 21
	'AFTER'        reduce using rule 21
	'AND'          reduce using rule 21
	'BEFORE'       reduce using rule 21
	'BY'           reduce using rule 21
	'DIVIDE'       reduce using rule 21
	'EQUALS'       reduce using rule 21
	'False'        shift, and enter state 17
	'HAS'          reduce using rule 21
	'IN'           reduce using rule 21
	'IS'           reduce using rule 21
	'MAP'          reduce using rule 21
	'MAX'          reduce using rule 21
	'MAY'          reduce using rule 21
	'MEANS'        reduce using rule 21
	'MIN'          reduce using rule 21
	'MINUS'        reduce using rule 21
	'MODULO'       reduce using rule 21
	'MUST'         reduce using rule 21
	'NOT'          reduce using rule 21
	'ON'           reduce using rule 21
	'OR'           reduce using rule 21
	'PRODUCT'      reduce using rule 21
	'SHANT'        reduce using rule 21
	'SUBJECT'      reduce using rule 21
	'SUM'          reduce using rule 21
	'True'         shift, and enter state 19
	'WHO'          reduce using rule 21
	L_doubl        shift, and enter state 2
	L_integ        shift, and enter state 20
	L_Text         shift, and enter state 6
	%eof           reduce using rule 21

	Double         goto state 7
	Integer        goto state 8
	Text           goto state 59
	MTExpr         goto state 11
	Bool           goto state 12
	ListMTExpr     goto state 60

State 12

	MTExpr -> Bool .                                    (rule 18)

	')'            reduce using rule 18
	','            reduce using rule 18
	'<'            reduce using rule 18
	'<='           reduce using rule 18
	'>'            reduce using rule 18
	'>='           reduce using rule 18
	'ABOUT'        reduce using rule 18
	'AFTER'        reduce using rule 18
	'AND'          reduce using rule 18
	'BEFORE'       reduce using rule 18
	'BY'           reduce using rule 18
	'DIVIDE'       reduce using rule 18
	'EQUALS'       reduce using rule 18
	'False'        reduce using rule 18
	'HAS'          reduce using rule 18
	'IN'           reduce using rule 18
	'IS'           reduce using rule 18
	'MAP'          reduce using rule 18
	'MAX'          reduce using rule 18
	'MAY'          reduce using rule 18
	'MEANS'        reduce using rule 18
	'MIN'          reduce using rule 18
	'MINUS'        reduce using rule 18
	'MODULO'       reduce using rule 18
	'MUST'         reduce using rule 18
	'NOT'          reduce using rule 18
	'ON'           reduce using rule 18
	'OR'           reduce using rule 18
	'PRODUCT'      reduce using rule 18
	'SHANT'        reduce using rule 18
	'SUBJECT'      reduce using rule 18
	'SUM'          reduce using rule 18
	'True'         reduce using rule 18
	'WHO'          reduce using rule 18
	L_doubl        reduce using rule 18
	L_integ        reduce using rule 18
	L_Text         reduce using rule 18
	%eof           reduce using rule 18


State 13

	RelationalPredicate -> ListMTExpr .                 (rule 13)
	RelationalPredicate -> ListMTExpr . RPRel BoolStruct    (rule 14)

	')'            reduce using rule 13
	','            reduce using rule 13
	'<'            shift, and enter state 34
	'<='           shift, and enter state 35
	'>'            shift, and enter state 36
	'>='           shift, and enter state 37
	'ABOUT'        shift, and enter state 38
	'AFTER'        shift, and enter state 39
	'AND'          shift, and enter state 40
	'BEFORE'       shift, and enter state 41
	'BY'           shift, and enter state 42
	'DIVIDE'       shift, and enter state 43
	'EQUALS'       shift, and enter state 44
	'HAS'          shift, and enter state 45
	'IN'           shift, and enter state 46
	'IS'           shift, and enter state 47
	'MAP'          shift, and enter state 48
	'MAX'          shift, and enter state 49
	'MAY'          reduce using rule 13
	'MEANS'        reduce using rule 13
	'MIN'          shift, and enter state 50
	'MINUS'        shift, and enter state 51
	'MODULO'       shift, and enter state 52
	'MUST'         reduce using rule 13
	'NOT'          shift, and enter state 53
	'ON'           shift, and enter state 54
	'OR'           shift, and enter state 55
	'PRODUCT'      shift, and enter state 56
	'SHANT'        reduce using rule 13
	'SUBJECT'      shift, and enter state 57
	'SUM'          shift, and enter state 58
	'WHO'          reduce using rule 13
	%eof           reduce using rule 13

	RPRel          goto state 32
	TComparison    goto state 33

State 14

	Rule -> 'EVERY' BoolStruct . Deontic BoolStruct     (rule 4)
	Rule -> 'EVERY' BoolStruct . Who Deontic BoolStruct    (rule 5)
	Rule -> 'EVERY' BoolStruct . Who InlineHornlike Deontic BoolStruct    (rule 6)

	'MAY'          shift, and enter state 28
	'MUST'         shift, and enter state 29
	'SHANT'        shift, and enter state 30
	'WHO'          shift, and enter state 31

	Deontic        goto state 26
	Who            goto state 27

State 15

	BoolStruct -> 'ALL' . '(' ListBoolStruct ')'        (rule 26)

	'('            shift, and enter state 25


State 16

	BoolStruct -> 'ANY' . '(' ListBoolStruct ')'        (rule 23)

	'('            shift, and enter state 24


State 17

	Bool -> 'False' .                                   (rule 20)

	')'            reduce using rule 20
	','            reduce using rule 20
	'<'            reduce using rule 20
	'<='           reduce using rule 20
	'>'            reduce using rule 20
	'>='           reduce using rule 20
	'ABOUT'        reduce using rule 20
	'AFTER'        reduce using rule 20
	'AND'          reduce using rule 20
	'BEFORE'       reduce using rule 20
	'BY'           reduce using rule 20
	'DIVIDE'       reduce using rule 20
	'EQUALS'       reduce using rule 20
	'False'        reduce using rule 20
	'HAS'          reduce using rule 20
	'IN'           reduce using rule 20
	'IS'           reduce using rule 20
	'MAP'          reduce using rule 20
	'MAX'          reduce using rule 20
	'MAY'          reduce using rule 20
	'MEANS'        reduce using rule 20
	'MIN'          reduce using rule 20
	'MINUS'        reduce using rule 20
	'MODULO'       reduce using rule 20
	'MUST'         reduce using rule 20
	'NOT'          reduce using rule 20
	'ON'           reduce using rule 20
	'OR'           reduce using rule 20
	'PRODUCT'      reduce using rule 20
	'SHANT'        reduce using rule 20
	'SUBJECT'      reduce using rule 20
	'SUM'          reduce using rule 20
	'True'         reduce using rule 20
	'WHO'          reduce using rule 20
	L_doubl        reduce using rule 20
	L_integ        reduce using rule 20
	L_Text         reduce using rule 20
	%eof           reduce using rule 20


State 18

	BoolStruct -> 'NOT' . BoolStruct                    (rule 29)

	'ALL'          shift, and enter state 15
	'ANY'          shift, and enter state 16
	'False'        shift, and enter state 17
	'NOT'          shift, and enter state 18
	'True'         shift, and enter state 19
	L_doubl        shift, and enter state 2
	L_integ        shift, and enter state 20
	L_Text         shift, and enter state 6

	Double         goto state 7
	Integer        goto state 8
	Text           goto state 9
	RelationalPredicategoto state 10
	MTExpr         goto state 11
	Bool           goto state 12
	ListMTExpr     goto state 13
	BoolStruct     goto state 23

State 19

	Bool -> 'True' .                                    (rule 19)

	')'            reduce using rule 19
	','            reduce using rule 19
	'<'            reduce using rule 19
	'<='           reduce using rule 19
	'>'            reduce using rule 19
	'>='           reduce using rule 19
	'ABOUT'        reduce using rule 19
	'AFTER'        reduce using rule 19
	'AND'          reduce using rule 19
	'BEFORE'       reduce using rule 19
	'BY'           reduce using rule 19
	'DIVIDE'       reduce using rule 19
	'EQUALS'       reduce using rule 19
	'False'        reduce using rule 19
	'HAS'          reduce using rule 19
	'IN'           reduce using rule 19
	'IS'           reduce using rule 19
	'MAP'          reduce using rule 19
	'MAX'          reduce using rule 19
	'MAY'          reduce using rule 19
	'MEANS'        reduce using rule 19
	'MIN'          reduce using rule 19
	'MINUS'        reduce using rule 19
	'MODULO'       reduce using rule 19
	'MUST'         reduce using rule 19
	'NOT'          reduce using rule 19
	'ON'           reduce using rule 19
	'OR'           reduce using rule 19
	'PRODUCT'      reduce using rule 19
	'SHANT'        reduce using rule 19
	'SUBJECT'      reduce using rule 19
	'SUM'          reduce using rule 19
	'True'         reduce using rule 19
	'WHO'          reduce using rule 19
	L_doubl        reduce using rule 19
	L_integ        reduce using rule 19
	L_Text         reduce using rule 19
	%eof           reduce using rule 19


State 20

	Integer -> L_integ .                                (rule 2)

	')'            reduce using rule 2
	','            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'ABOUT'        reduce using rule 2
	'AFTER'        reduce using rule 2
	'AND'          reduce using rule 2
	'BEFORE'       reduce using rule 2
	'BY'           reduce using rule 2
	'DIVIDE'       reduce using rule 2
	'EQUALS'       reduce using rule 2
	'False'        reduce using rule 2
	'HAS'          reduce using rule 2
	'IN'           reduce using rule 2
	'IS'           reduce using rule 2
	'MAP'          reduce using rule 2
	'MAX'          reduce using rule 2
	'MAY'          reduce using rule 2
	'MEANS'        reduce using rule 2
	'MIN'          reduce using rule 2
	'MINUS'        reduce using rule 2
	'MODULO'       reduce using rule 2
	'MUST'         reduce using rule 2
	'NOT'          reduce using rule 2
	'ON'           reduce using rule 2
	'OR'           reduce using rule 2
	'PRODUCT'      reduce using rule 2
	'SHANT'        reduce using rule 2
	'SUBJECT'      reduce using rule 2
	'SUM'          reduce using rule 2
	'True'         reduce using rule 2
	'WHO'          reduce using rule 2
	L_doubl        reduce using rule 2
	L_integ        reduce using rule 2
	L_Text         reduce using rule 2
	%eof           reduce using rule 2


State 21

	Rule -> Text 'MEANS' . BoolStruct                   (rule 7)

	'ALL'          shift, and enter state 15
	'ANY'          shift, and enter state 16
	'False'        shift, and enter state 17
	'NOT'          shift, and enter state 18
	'True'         shift, and enter state 19
	L_doubl        shift, and enter state 2
	L_integ        shift, and enter state 20
	L_Text         shift, and enter state 6

	Double         goto state 7
	Integer        goto state 8
	Text           goto state 9
	RelationalPredicategoto state 10
	MTExpr         goto state 11
	Bool           goto state 12
	ListMTExpr     goto state 13
	BoolStruct     goto state 22

State 22

	Rule -> Text 'MEANS' BoolStruct .                   (rule 7)

	%eof           reduce using rule 7


State 23

	BoolStruct -> 'NOT' BoolStruct .                    (rule 29)

	')'            reduce using rule 29
	','            reduce using rule 29
	'MAY'          reduce using rule 29
	'MEANS'        reduce using rule 29
	'MUST'         reduce using rule 29
	'SHANT'        reduce using rule 29
	'WHO'          reduce using rule 29
	%eof           reduce using rule 29


State 24

	BoolStruct -> 'ANY' '(' . ListBoolStruct ')'        (rule 23)

	'ALL'          shift, and enter state 15
	'ANY'          shift, and enter state 16
	'False'        shift, and enter state 17
	'NOT'          shift, and enter state 18
	'True'         shift, and enter state 19
	L_doubl        shift, and enter state 2
	L_integ        shift, and enter state 20
	L_Text         shift, and enter state 6

	Double         goto state 7
	Integer        goto state 8
	Text           goto state 9
	RelationalPredicategoto state 10
	MTExpr         goto state 11
	Bool           goto state 12
	ListMTExpr     goto state 13
	BoolStruct     goto state 73
	ListBoolStruct goto state 75

State 25

	BoolStruct -> 'ALL' '(' . ListBoolStruct ')'        (rule 26)

	'ALL'          shift, and enter state 15
	'ANY'          shift, and enter state 16
	'False'        shift, and enter state 17
	'NOT'          shift, and enter state 18
	'True'         shift, and enter state 19
	L_doubl        shift, and enter state 2
	L_integ        shift, and enter state 20
	L_Text         shift, and enter state 6

	Double         goto state 7
	Integer        goto state 8
	Text           goto state 9
	RelationalPredicategoto state 10
	MTExpr         goto state 11
	Bool           goto state 12
	ListMTExpr     goto state 13
	BoolStruct     goto state 73
	ListBoolStruct goto state 74

State 26

	Rule -> 'EVERY' BoolStruct Deontic . BoolStruct     (rule 4)

	'ALL'          shift, and enter state 15
	'ANY'          shift, and enter state 16
	'False'        shift, and enter state 17
	'NOT'          shift, and enter state 18
	'True'         shift, and enter state 19
	L_doubl        shift, and enter state 2
	L_integ        shift, and enter state 20
	L_Text         shift, and enter state 6

	Double         goto state 7
	Integer        goto state 8
	Text           goto state 9
	RelationalPredicategoto state 10
	MTExpr         goto state 11
	Bool           goto state 12
	ListMTExpr     goto state 13
	BoolStruct     goto state 72

State 27

	Rule -> 'EVERY' BoolStruct Who . Deontic BoolStruct    (rule 5)
	Rule -> 'EVERY' BoolStruct Who . InlineHornlike Deontic BoolStruct    (rule 6)

	'MAY'          shift, and enter state 28
	'MEANS'        shift, and enter state 71
	'MUST'         shift, and enter state 29
	'SHANT'        shift, and enter state 30

	Deontic        goto state 69
	InlineHornlike goto state 70

State 28

	Deontic -> 'MAY' .                                  (rule 9)

	'ALL'          reduce using rule 9
	'ANY'          reduce using rule 9
	'False'        reduce using rule 9
	'NOT'          reduce using rule 9
	'True'         reduce using rule 9
	L_doubl        reduce using rule 9
	L_integ        reduce using rule 9
	L_Text         reduce using rule 9


State 29

	Deontic -> 'MUST' .                                 (rule 8)

	'ALL'          reduce using rule 8
	'ANY'          reduce using rule 8
	'False'        reduce using rule 8
	'NOT'          reduce using rule 8
	'True'         reduce using rule 8
	L_doubl        reduce using rule 8
	L_integ        reduce using rule 8
	L_Text         reduce using rule 8


State 30

	Deontic -> 'SHANT' .                                (rule 10)

	'ALL'          reduce using rule 10
	'ANY'          reduce using rule 10
	'False'        reduce using rule 10
	'NOT'          reduce using rule 10
	'True'         reduce using rule 10
	L_doubl        reduce using rule 10
	L_integ        reduce using rule 10
	L_Text         reduce using rule 10


State 31

	Who -> 'WHO' . BoolStruct                           (rule 11)

	'ALL'          shift, and enter state 15
	'ANY'          shift, and enter state 16
	'False'        shift, and enter state 17
	'NOT'          shift, and enter state 18
	'True'         shift, and enter state 19
	L_doubl        shift, and enter state 2
	L_integ        shift, and enter state 20
	L_Text         shift, and enter state 6

	Double         goto state 7
	Integer        goto state 8
	Text           goto state 9
	RelationalPredicategoto state 10
	MTExpr         goto state 11
	Bool           goto state 12
	ListMTExpr     goto state 13
	BoolStruct     goto state 68

State 32

	RelationalPredicate -> ListMTExpr RPRel . BoolStruct    (rule 14)

	'ALL'          shift, and enter state 15
	'ANY'          shift, and enter state 16
	'False'        shift, and enter state 17
	'NOT'          shift, and enter state 18
	'True'         shift, and enter state 19
	L_doubl        shift, and enter state 2
	L_integ        shift, and enter state 20
	L_Text         shift, and enter state 6

	Double         goto state 7
	Integer        goto state 8
	Text           goto state 9
	RelationalPredicategoto state 10
	MTExpr         goto state 11
	Bool           goto state 12
	ListMTExpr     goto state 13
	BoolStruct     goto state 67

State 33

	RPRel -> TComparison .                              (rule 54)

	'ALL'          reduce using rule 54
	'ANY'          reduce using rule 54
	'False'        reduce using rule 54
	'NOT'          reduce using rule 54
	'True'         reduce using rule 54
	L_doubl        reduce using rule 54
	L_integ        reduce using rule 54
	L_Text         reduce using rule 54


State 34

	RPRel -> '<' .                                      (rule 36)

	'ALL'          reduce using rule 36
	'ANY'          reduce using rule 36
	'False'        reduce using rule 36
	'NOT'          reduce using rule 36
	'True'         reduce using rule 36
	L_doubl        reduce using rule 36
	L_integ        reduce using rule 36
	L_Text         reduce using rule 36


State 35

	RPRel -> '<=' .                                     (rule 37)

	'ALL'          reduce using rule 37
	'ANY'          reduce using rule 37
	'False'        reduce using rule 37
	'NOT'          reduce using rule 37
	'True'         reduce using rule 37
	L_doubl        reduce using rule 37
	L_integ        reduce using rule 37
	L_Text         reduce using rule 37


State 36

	RPRel -> '>' .                                      (rule 38)

	'ALL'          reduce using rule 38
	'ANY'          reduce using rule 38
	'False'        reduce using rule 38
	'NOT'          reduce using rule 38
	'True'         reduce using rule 38
	L_doubl        reduce using rule 38
	L_integ        reduce using rule 38
	L_Text         reduce using rule 38


State 37

	RPRel -> '>=' .                                     (rule 39)

	'ALL'          reduce using rule 39
	'ANY'          reduce using rule 39
	'False'        reduce using rule 39
	'NOT'          reduce using rule 39
	'True'         reduce using rule 39
	L_doubl        reduce using rule 39
	L_integ        reduce using rule 39
	L_Text         reduce using rule 39


State 38

	TComparison -> 'ABOUT' .                            (rule 59)

	'ALL'          reduce using rule 59
	'ANY'          reduce using rule 59
	'False'        reduce using rule 59
	'NOT'          reduce using rule 59
	'True'         reduce using rule 59
	L_doubl        reduce using rule 59
	L_integ        reduce using rule 59
	L_Text         reduce using rule 59


State 39

	TComparison -> 'AFTER' .                            (rule 56)

	'ALL'          reduce using rule 56
	'ANY'          reduce using rule 56
	'False'        reduce using rule 56
	'NOT'          reduce using rule 56
	'True'         reduce using rule 56
	L_doubl        reduce using rule 56
	L_integ        reduce using rule 56
	L_Text         reduce using rule 56


State 40

	RPRel -> 'AND' .                                    (rule 43)

	'ALL'          reduce using rule 43
	'ANY'          reduce using rule 43
	'False'        reduce using rule 43
	'NOT'          reduce using rule 43
	'True'         reduce using rule 43
	L_doubl        reduce using rule 43
	L_integ        reduce using rule 43
	L_Text         reduce using rule 43


State 41

	TComparison -> 'BEFORE' .                           (rule 55)

	'ALL'          reduce using rule 55
	'ANY'          reduce using rule 55
	'False'        reduce using rule 55
	'NOT'          reduce using rule 55
	'True'         reduce using rule 55
	L_doubl        reduce using rule 55
	L_integ        reduce using rule 55
	L_Text         reduce using rule 55


State 42

	TComparison -> 'BY' .                               (rule 57)

	'ALL'          reduce using rule 57
	'ANY'          reduce using rule 57
	'False'        reduce using rule 57
	'NOT'          reduce using rule 57
	'True'         reduce using rule 57
	L_doubl        reduce using rule 57
	L_integ        reduce using rule 57
	L_Text         reduce using rule 57


State 43

	RPRel -> 'DIVIDE' .                                 (rule 48)

	'ALL'          reduce using rule 48
	'ANY'          reduce using rule 48
	'False'        reduce using rule 48
	'NOT'          reduce using rule 48
	'True'         reduce using rule 48
	L_doubl        reduce using rule 48
	L_integ        reduce using rule 48
	L_Text         reduce using rule 48


State 44

	RPRel -> 'EQUALS' .                                 (rule 35)

	'ALL'          reduce using rule 35
	'ANY'          reduce using rule 35
	'False'        reduce using rule 35
	'NOT'          reduce using rule 35
	'True'         reduce using rule 35
	L_doubl        reduce using rule 35
	L_integ        reduce using rule 35
	L_Text         reduce using rule 35


State 45

	RPRel -> 'HAS' .                                    (rule 34)

	'ALL'          reduce using rule 34
	'ANY'          reduce using rule 34
	'False'        reduce using rule 34
	'NOT'          reduce using rule 34
	'True'         reduce using rule 34
	L_doubl        reduce using rule 34
	L_integ        reduce using rule 34
	L_Text         reduce using rule 34


State 46

	RPRel -> 'IN' .                                     (rule 40)

	'ALL'          reduce using rule 40
	'ANY'          reduce using rule 40
	'False'        reduce using rule 40
	'NOT'          reduce using rule 40
	'True'         reduce using rule 40
	L_doubl        reduce using rule 40
	L_integ        reduce using rule 40
	L_Text         reduce using rule 40


State 47

	RPRel -> 'IS' .                                     (rule 33)

	'ALL'          reduce using rule 33
	'ANY'          reduce using rule 33
	'False'        reduce using rule 33
	'NOT'          reduce using rule 33
	'True'         reduce using rule 33
	L_doubl        reduce using rule 33
	L_integ        reduce using rule 33
	L_Text         reduce using rule 33


State 48

	RPRel -> 'MAP' .                                    (rule 53)

	'ALL'          reduce using rule 53
	'ANY'          reduce using rule 53
	'False'        reduce using rule 53
	'NOT'          reduce using rule 53
	'True'         reduce using rule 53
	L_doubl        reduce using rule 53
	L_integ        reduce using rule 53
	L_Text         reduce using rule 53


State 49

	RPRel -> 'MAX' .                                    (rule 52)

	'ALL'          reduce using rule 52
	'ANY'          reduce using rule 52
	'False'        reduce using rule 52
	'NOT'          reduce using rule 52
	'True'         reduce using rule 52
	L_doubl        reduce using rule 52
	L_integ        reduce using rule 52
	L_Text         reduce using rule 52


State 50

	RPRel -> 'MIN' .                                    (rule 51)

	'ALL'          reduce using rule 51
	'ANY'          reduce using rule 51
	'False'        reduce using rule 51
	'NOT'          reduce using rule 51
	'True'         reduce using rule 51
	L_doubl        reduce using rule 51
	L_integ        reduce using rule 51
	L_Text         reduce using rule 51


State 51

	RPRel -> 'MINUS' .                                  (rule 47)

	'ALL'          reduce using rule 47
	'ANY'          reduce using rule 47
	'False'        reduce using rule 47
	'NOT'          reduce using rule 47
	'True'         reduce using rule 47
	L_doubl        reduce using rule 47
	L_integ        reduce using rule 47
	L_Text         reduce using rule 47


State 52

	RPRel -> 'MODULO' .                                 (rule 49)

	'ALL'          reduce using rule 49
	'ANY'          reduce using rule 49
	'False'        reduce using rule 49
	'NOT'          reduce using rule 49
	'True'         reduce using rule 49
	L_doubl        reduce using rule 49
	L_integ        reduce using rule 49
	L_Text         reduce using rule 49


State 53

	RPRel -> 'NOT' . 'IN'                               (rule 41)
	RPRel -> 'NOT' .                                    (rule 42)

	'ALL'          reduce using rule 42
	'ANY'          reduce using rule 42
	'False'        reduce using rule 42
	'IN'           shift, and enter state 66
	'NOT'          reduce using rule 42
	'True'         reduce using rule 42
	L_doubl        reduce using rule 42
	L_integ        reduce using rule 42
	L_Text         reduce using rule 42


State 54

	TComparison -> 'ON' .                               (rule 58)

	'ALL'          reduce using rule 58
	'ANY'          reduce using rule 58
	'False'        reduce using rule 58
	'NOT'          reduce using rule 58
	'True'         reduce using rule 58
	L_doubl        reduce using rule 58
	L_integ        reduce using rule 58
	L_Text         reduce using rule 58


State 55

	RPRel -> 'OR' .                                     (rule 44)

	'ALL'          reduce using rule 44
	'ANY'          reduce using rule 44
	'False'        reduce using rule 44
	'NOT'          reduce using rule 44
	'True'         reduce using rule 44
	L_doubl        reduce using rule 44
	L_integ        reduce using rule 44
	L_Text         reduce using rule 44


State 56

	RPRel -> 'PRODUCT' .                                (rule 46)

	'ALL'          reduce using rule 46
	'ANY'          reduce using rule 46
	'False'        reduce using rule 46
	'NOT'          reduce using rule 46
	'True'         reduce using rule 46
	L_doubl        reduce using rule 46
	L_integ        reduce using rule 46
	L_Text         reduce using rule 46


State 57

	RPRel -> 'SUBJECT' . 'TO'                           (rule 50)

	'TO'           shift, and enter state 65


State 58

	RPRel -> 'SUM' .                                    (rule 45)

	'ALL'          reduce using rule 45
	'ANY'          reduce using rule 45
	'False'        reduce using rule 45
	'NOT'          reduce using rule 45
	'True'         reduce using rule 45
	L_doubl        reduce using rule 45
	L_integ        reduce using rule 45
	L_Text         reduce using rule 45


State 59

	MTExpr -> Text .                                    (rule 15)

	')'            reduce using rule 15
	','            reduce using rule 15
	'<'            reduce using rule 15
	'<='           reduce using rule 15
	'>'            reduce using rule 15
	'>='           reduce using rule 15
	'ABOUT'        reduce using rule 15
	'AFTER'        reduce using rule 15
	'AND'          reduce using rule 15
	'BEFORE'       reduce using rule 15
	'BY'           reduce using rule 15
	'DIVIDE'       reduce using rule 15
	'EQUALS'       reduce using rule 15
	'False'        reduce using rule 15
	'HAS'          reduce using rule 15
	'IN'           reduce using rule 15
	'IS'           reduce using rule 15
	'MAP'          reduce using rule 15
	'MAX'          reduce using rule 15
	'MAY'          reduce using rule 15
	'MEANS'        reduce using rule 15
	'MIN'          reduce using rule 15
	'MINUS'        reduce using rule 15
	'MODULO'       reduce using rule 15
	'MUST'         reduce using rule 15
	'NOT'          reduce using rule 15
	'ON'           reduce using rule 15
	'OR'           reduce using rule 15
	'PRODUCT'      reduce using rule 15
	'SHANT'        reduce using rule 15
	'SUBJECT'      reduce using rule 15
	'SUM'          reduce using rule 15
	'True'         reduce using rule 15
	'WHO'          reduce using rule 15
	L_doubl        reduce using rule 15
	L_integ        reduce using rule 15
	L_Text         reduce using rule 15
	%eof           reduce using rule 15


State 60

	ListMTExpr -> MTExpr ListMTExpr .                   (rule 22)

	')'            reduce using rule 22
	','            reduce using rule 22
	'<'            reduce using rule 22
	'<='           reduce using rule 22
	'>'            reduce using rule 22
	'>='           reduce using rule 22
	'ABOUT'        reduce using rule 22
	'AFTER'        reduce using rule 22
	'AND'          reduce using rule 22
	'BEFORE'       reduce using rule 22
	'BY'           reduce using rule 22
	'DIVIDE'       reduce using rule 22
	'EQUALS'       reduce using rule 22
	'HAS'          reduce using rule 22
	'IN'           reduce using rule 22
	'IS'           reduce using rule 22
	'MAP'          reduce using rule 22
	'MAX'          reduce using rule 22
	'MAY'          reduce using rule 22
	'MEANS'        reduce using rule 22
	'MIN'          reduce using rule 22
	'MINUS'        reduce using rule 22
	'MODULO'       reduce using rule 22
	'MUST'         reduce using rule 22
	'NOT'          reduce using rule 22
	'ON'           reduce using rule 22
	'OR'           reduce using rule 22
	'PRODUCT'      reduce using rule 22
	'SHANT'        reduce using rule 22
	'SUBJECT'      reduce using rule 22
	'SUM'          reduce using rule 22
	'WHO'          reduce using rule 22
	%eof           reduce using rule 22


State 61

	BoolStruct -> Text 'ALL' . '(' ListBoolStruct ')'    (rule 27)
	BoolStruct -> Text 'ALL' . '(' ListBoolStruct ')' Text    (rule 28)

	'('            shift, and enter state 64


State 62

	BoolStruct -> Text 'ANY' . '(' ListBoolStruct ')' Text    (rule 24)
	BoolStruct -> Text 'ANY' . '(' ListBoolStruct ')'    (rule 25)

	'('            shift, and enter state 63


State 63

	BoolStruct -> Text 'ANY' '(' . ListBoolStruct ')' Text    (rule 24)
	BoolStruct -> Text 'ANY' '(' . ListBoolStruct ')'    (rule 25)

	'ALL'          shift, and enter state 15
	'ANY'          shift, and enter state 16
	'False'        shift, and enter state 17
	'NOT'          shift, and enter state 18
	'True'         shift, and enter state 19
	L_doubl        shift, and enter state 2
	L_integ        shift, and enter state 20
	L_Text         shift, and enter state 6

	Double         goto state 7
	Integer        goto state 8
	Text           goto state 9
	RelationalPredicategoto state 10
	MTExpr         goto state 11
	Bool           goto state 12
	ListMTExpr     goto state 13
	BoolStruct     goto state 73
	ListBoolStruct goto state 83

State 64

	BoolStruct -> Text 'ALL' '(' . ListBoolStruct ')'    (rule 27)
	BoolStruct -> Text 'ALL' '(' . ListBoolStruct ')' Text    (rule 28)

	'ALL'          shift, and enter state 15
	'ANY'          shift, and enter state 16
	'False'        shift, and enter state 17
	'NOT'          shift, and enter state 18
	'True'         shift, and enter state 19
	L_doubl        shift, and enter state 2
	L_integ        shift, and enter state 20
	L_Text         shift, and enter state 6

	Double         goto state 7
	Integer        goto state 8
	Text           goto state 9
	RelationalPredicategoto state 10
	MTExpr         goto state 11
	Bool           goto state 12
	ListMTExpr     goto state 13
	BoolStruct     goto state 73
	ListBoolStruct goto state 82

State 65

	RPRel -> 'SUBJECT' 'TO' .                           (rule 50)

	'ALL'          reduce using rule 50
	'ANY'          reduce using rule 50
	'False'        reduce using rule 50
	'NOT'          reduce using rule 50
	'True'         reduce using rule 50
	L_doubl        reduce using rule 50
	L_integ        reduce using rule 50
	L_Text         reduce using rule 50


State 66

	RPRel -> 'NOT' 'IN' .                               (rule 41)

	'ALL'          reduce using rule 41
	'ANY'          reduce using rule 41
	'False'        reduce using rule 41
	'NOT'          reduce using rule 41
	'True'         reduce using rule 41
	L_doubl        reduce using rule 41
	L_integ        reduce using rule 41
	L_Text         reduce using rule 41


State 67

	RelationalPredicate -> ListMTExpr RPRel BoolStruct .    (rule 14)

	')'            reduce using rule 14
	','            reduce using rule 14
	'MAY'          reduce using rule 14
	'MEANS'        reduce using rule 14
	'MUST'         reduce using rule 14
	'SHANT'        reduce using rule 14
	'WHO'          reduce using rule 14
	%eof           reduce using rule 14


State 68

	Who -> 'WHO' BoolStruct .                           (rule 11)

	'MAY'          reduce using rule 11
	'MEANS'        reduce using rule 11
	'MUST'         reduce using rule 11
	'SHANT'        reduce using rule 11


State 69

	Rule -> 'EVERY' BoolStruct Who Deontic . BoolStruct    (rule 5)

	'ALL'          shift, and enter state 15
	'ANY'          shift, and enter state 16
	'False'        shift, and enter state 17
	'NOT'          shift, and enter state 18
	'True'         shift, and enter state 19
	L_doubl        shift, and enter state 2
	L_integ        shift, and enter state 20
	L_Text         shift, and enter state 6

	Double         goto state 7
	Integer        goto state 8
	Text           goto state 9
	RelationalPredicategoto state 10
	MTExpr         goto state 11
	Bool           goto state 12
	ListMTExpr     goto state 13
	BoolStruct     goto state 81

State 70

	Rule -> 'EVERY' BoolStruct Who InlineHornlike . Deontic BoolStruct    (rule 6)

	'MAY'          shift, and enter state 28
	'MUST'         shift, and enter state 29
	'SHANT'        shift, and enter state 30

	Deontic        goto state 80

State 71

	InlineHornlike -> 'MEANS' . BoolStruct              (rule 12)

	'ALL'          shift, and enter state 15
	'ANY'          shift, and enter state 16
	'False'        shift, and enter state 17
	'NOT'          shift, and enter state 18
	'True'         shift, and enter state 19
	L_doubl        shift, and enter state 2
	L_integ        shift, and enter state 20
	L_Text         shift, and enter state 6

	Double         goto state 7
	Integer        goto state 8
	Text           goto state 9
	RelationalPredicategoto state 10
	MTExpr         goto state 11
	Bool           goto state 12
	ListMTExpr     goto state 13
	BoolStruct     goto state 79

State 72

	Rule -> 'EVERY' BoolStruct Deontic BoolStruct .     (rule 4)

	%eof           reduce using rule 4


State 73

	ListBoolStruct -> BoolStruct .                      (rule 31)
	ListBoolStruct -> BoolStruct . ',' ListBoolStruct    (rule 32)

	')'            reduce using rule 31
	','            shift, and enter state 78


State 74

	BoolStruct -> 'ALL' '(' ListBoolStruct . ')'        (rule 26)

	')'            shift, and enter state 77


State 75

	BoolStruct -> 'ANY' '(' ListBoolStruct . ')'        (rule 23)

	')'            shift, and enter state 76


State 76

	BoolStruct -> 'ANY' '(' ListBoolStruct ')' .        (rule 23)

	')'            reduce using rule 23
	','            reduce using rule 23
	'MAY'          reduce using rule 23
	'MEANS'        reduce using rule 23
	'MUST'         reduce using rule 23
	'SHANT'        reduce using rule 23
	'WHO'          reduce using rule 23
	%eof           reduce using rule 23


State 77

	BoolStruct -> 'ALL' '(' ListBoolStruct ')' .        (rule 26)

	')'            reduce using rule 26
	','            reduce using rule 26
	'MAY'          reduce using rule 26
	'MEANS'        reduce using rule 26
	'MUST'         reduce using rule 26
	'SHANT'        reduce using rule 26
	'WHO'          reduce using rule 26
	%eof           reduce using rule 26


State 78

	ListBoolStruct -> BoolStruct ',' . ListBoolStruct    (rule 32)

	'ALL'          shift, and enter state 15
	'ANY'          shift, and enter state 16
	'False'        shift, and enter state 17
	'NOT'          shift, and enter state 18
	'True'         shift, and enter state 19
	L_doubl        shift, and enter state 2
	L_integ        shift, and enter state 20
	L_Text         shift, and enter state 6

	Double         goto state 7
	Integer        goto state 8
	Text           goto state 9
	RelationalPredicategoto state 10
	MTExpr         goto state 11
	Bool           goto state 12
	ListMTExpr     goto state 13
	BoolStruct     goto state 73
	ListBoolStruct goto state 87

State 79

	InlineHornlike -> 'MEANS' BoolStruct .              (rule 12)

	'MAY'          reduce using rule 12
	'MUST'         reduce using rule 12
	'SHANT'        reduce using rule 12


State 80

	Rule -> 'EVERY' BoolStruct Who InlineHornlike Deontic . BoolStruct    (rule 6)

	'ALL'          shift, and enter state 15
	'ANY'          shift, and enter state 16
	'False'        shift, and enter state 17
	'NOT'          shift, and enter state 18
	'True'         shift, and enter state 19
	L_doubl        shift, and enter state 2
	L_integ        shift, and enter state 20
	L_Text         shift, and enter state 6

	Double         goto state 7
	Integer        goto state 8
	Text           goto state 9
	RelationalPredicategoto state 10
	MTExpr         goto state 11
	Bool           goto state 12
	ListMTExpr     goto state 13
	BoolStruct     goto state 86

State 81

	Rule -> 'EVERY' BoolStruct Who Deontic BoolStruct .    (rule 5)

	%eof           reduce using rule 5


State 82

	BoolStruct -> Text 'ALL' '(' ListBoolStruct . ')'    (rule 27)
	BoolStruct -> Text 'ALL' '(' ListBoolStruct . ')' Text    (rule 28)

	')'            shift, and enter state 85


State 83

	BoolStruct -> Text 'ANY' '(' ListBoolStruct . ')' Text    (rule 24)
	BoolStruct -> Text 'ANY' '(' ListBoolStruct . ')'    (rule 25)

	')'            shift, and enter state 84


State 84

	BoolStruct -> Text 'ANY' '(' ListBoolStruct ')' . Text    (rule 24)
	BoolStruct -> Text 'ANY' '(' ListBoolStruct ')' .    (rule 25)

	')'            reduce using rule 25
	','            reduce using rule 25
	'MAY'          reduce using rule 25
	'MEANS'        reduce using rule 25
	'MUST'         reduce using rule 25
	'SHANT'        reduce using rule 25
	'WHO'          reduce using rule 25
	L_Text         shift, and enter state 6
	%eof           reduce using rule 25

	Text           goto state 89

State 85

	BoolStruct -> Text 'ALL' '(' ListBoolStruct ')' .    (rule 27)
	BoolStruct -> Text 'ALL' '(' ListBoolStruct ')' . Text    (rule 28)

	')'            reduce using rule 27
	','            reduce using rule 27
	'MAY'          reduce using rule 27
	'MEANS'        reduce using rule 27
	'MUST'         reduce using rule 27
	'SHANT'        reduce using rule 27
	'WHO'          reduce using rule 27
	L_Text         shift, and enter state 6
	%eof           reduce using rule 27

	Text           goto state 88

State 86

	Rule -> 'EVERY' BoolStruct Who InlineHornlike Deontic BoolStruct .    (rule 6)

	%eof           reduce using rule 6


State 87

	ListBoolStruct -> BoolStruct ',' ListBoolStruct .    (rule 32)

	')'            reduce using rule 32


State 88

	BoolStruct -> Text 'ALL' '(' ListBoolStruct ')' Text .    (rule 28)

	')'            reduce using rule 28
	','            reduce using rule 28
	'MAY'          reduce using rule 28
	'MEANS'        reduce using rule 28
	'MUST'         reduce using rule 28
	'SHANT'        reduce using rule 28
	'WHO'          reduce using rule 28
	%eof           reduce using rule 28


State 89

	BoolStruct -> Text 'ANY' '(' ListBoolStruct ')' Text .    (rule 24)

	')'            reduce using rule 24
	','            reduce using rule 24
	'MAY'          reduce using rule 24
	'MEANS'        reduce using rule 24
	'MUST'         reduce using rule 24
	'SHANT'        reduce using rule 24
	'WHO'          reduce using rule 24
	%eof           reduce using rule 24


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 60
Number of terminals: 42
Number of non-terminals: 16
Number of states: 90
