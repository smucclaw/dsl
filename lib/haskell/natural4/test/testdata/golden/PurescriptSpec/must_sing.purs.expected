-- This file was automatically generated by natural4.
-- Do not edit by hand.
-- Instead, revise the toolchain starting at smucclaw/dsl/lib/haskell/natural4/app/Main.hs

module RuleLib.Interview where

import Prelude
import Data.Either
import Data.Maybe
import Data.Tuple
import Data.Map as Map
import Foreign.Object as Object

import AnyAll.Types

interviewRules :: Item String
interviewRules =  All
    ( Pre "all of:" )
    [ Leaf "does the person walk?"
    , Any
        ( Pre "any of:" )
        [ Leaf "does the person eat?"
        , Leaf "does the person drink?"
        ]
    ]


interviewRules_nl :: NLDict
interviewRules_nl =
  Map.fromFoldable
    [ ]

nl4chi :: Object.Object (Item String)
nl4chi = Object.fromFoldable
  [ Tuple "Person"
    ( All
        ( Pre "all of:" )
        [ Leaf "人 走 吗？"
        , Any
            ( Pre "any of:" )
            [ Leaf "人 吃 吗？"
            , Leaf "人 喝 吗？"
            ]
        ]
    )
]

nl4chiMarking :: Marking
nl4chiMarking = Marking $ Map.fromFoldable
  []

nl4eng :: Object.Object (Item String)
nl4eng = Object.fromFoldable
  [ Tuple "Person"
    ( All
        ( Pre "all of:" )
        [ Leaf "does the person walk?"
        , Any
            ( Pre "any of:" )
            [ Leaf "does the person eat?"
            , Leaf "does the person drink?"
            ]
        ]
    )
]

nl4engMarking :: Marking
nl4engMarking = Marking $ Map.fromFoldable
  []

nl4may :: Object.Object (Item String)
nl4may = Object.fromFoldable
  [ Tuple "Person"
    ( All
        ( Pre "all of:" )
        [ Leaf "adakah seseorang berjalan?"
        , Any
            ( Pre "any of:" )
            [ Leaf "adakah seseorang makan?"
            , Leaf "adakah seseorang minum?"
            ]
        ]
    )
]

nl4mayMarking :: Marking
nl4mayMarking = Marking $ Map.fromFoldable
  []



allLang = ["nl4chi", "nl4eng", "nl4may"]