Right
    [ Hornlike
        ( RnHornlike
            { name = RnFunDecl
                ( RnName
                    { rnOccName = MTT "g" :| []
                    , rnUniqueId = 1
                    , rnNameType = RnFunction
                    }
                )
                [ RnName
                    { rnOccName = MTT "d" :| []
                    , rnUniqueId = 0
                    , rnNameType = RnVariable
                    }
                ]
            , super = Nothing
            , keyword = Decide
            , given = Just
                ( RnParamText
                    { mkParamText = RnTypedMulti
                        { rnTypedMultiExpr = RnExprName
                            ( RnName
                                { rnOccName = MTT "d" :| []
                                , rnUniqueId = 0
                                , rnNameType = RnVariable
                                }
                            ) :| []
                        , rnTypedMultiTypeSig = Nothing
                        } :| []
                    }
                )
            , giveth = Nothing
            , upon = Nothing
            , clauses =
                [ RnHornClause
                    { rnHcHead = RnConstraint
                        ( RnFunDecl
                            ( RnName
                                { rnOccName = MTT "g" :| []
                                , rnUniqueId = 1
                                , rnNameType = RnFunction
                                }
                            )
                            [ RnName
                                { rnOccName = MTT "d" :| []
                                , rnUniqueId = 0
                                , rnNameType = RnVariable
                                }
                            ]
                        ) RPis
                        ( RnExprName
                            ( RnName
                                { rnOccName = MTT "y" :| []
                                , rnUniqueId = 2
                                , rnNameType = RnVariable
                                }
                            )
                        )
                    , rnHcBody = Nothing
                    }
                ]
            , rlabel = Nothing
            , lsource = Nothing
            , wwhere =
                [ Hornlike
                    ( RnHornlike
                        { name = RnProjection
                            ( RnName
                                { rnOccName = MTT "y" :| []
                                , rnUniqueId = 2
                                , rnNameType = RnVariable
                                }
                            )
                            [ RnName
                                { rnOccName = MTT "book" :| []
                                , rnUniqueId = 3
                                , rnNameType = RnSelector
                                }
                            ]
                        , super = Nothing
                        , keyword = Where
                        , given = Nothing
                        , giveth = Nothing
                        , upon = Nothing
                        , clauses =
                            [ RnHornClause
                                { rnHcHead = RnConstraint
                                    ( RnProjection
                                        ( RnName
                                            { rnOccName = MTT "y" :| []
                                            , rnUniqueId = 2
                                            , rnNameType = RnVariable
                                            }
                                        )
                                        [ RnName
                                            { rnOccName = MTT "book" :| []
                                            , rnUniqueId = 3
                                            , rnNameType = RnSelector
                                            }
                                        ]
                                    ) RPis
                                    ( RnExprLit
                                        ( RnString "green" )
                                    )
                                , rnHcBody = Just
                                    ( Leaf
                                        ( RnConstraint
                                            ( RnExprName
                                                ( RnName
                                                    { rnOccName = MTT "d" :| []
                                                    , rnUniqueId = 0
                                                    , rnNameType = RnVariable
                                                    }
                                                )
                                            ) RPgt
                                            ( RnExprLit
                                                ( RnInt 0 )
                                            )
                                        )
                                    )
                                }
                            , RnHornClause
                                { rnHcHead = RnConstraint
                                    ( RnProjection
                                        ( RnName
                                            { rnOccName = MTT "y" :| []
                                            , rnUniqueId = 2
                                            , rnNameType = RnVariable
                                            }
                                        )
                                        [ RnName
                                            { rnOccName = MTT "book" :| []
                                            , rnUniqueId = 3
                                            , rnNameType = RnSelector
                                            }
                                        ]
                                    ) RPis
                                    ( RnExprLit
                                        ( RnString "red" )
                                    )
                                , rnHcBody = Just
                                    ( Leaf
                                        ( RnRelationalTerm ( RnExprBuiltin RnOtherwise ) )
                                    )
                                }
                            ]
                        , rlabel = Nothing
                        , lsource = Nothing
                        , wwhere = []
                        , srcref = Just
                            ( SrcRef
                                { url = "test/Spec"
                                , short = "test/Spec"
                                , srcrow = 1
                                , srccol = 1
                                , version = Nothing
                                }
                            )
                        , defaults = []
                        , symtab = []
                        }
                    )
                ]
            , srcref = Just
                ( SrcRef
                    { url = "test/Spec"
                    , short = "test/Spec"
                    , srcrow = 1
                    , srccol = 1
                    , version = Nothing
                    }
                )
            , defaults = []
            , symtab = []
            }
        )
    ]